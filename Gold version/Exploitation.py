# -*- coding: utf-8 -*-
"""
@author : Nicolas
"""
import fonctions as f
from matplotlib import pyplot as plt
import numpy as np
import constants as c
prop = []
N = []
choice = 0
while choice is not "1" or "2" or "3" or "4":
    choice = str(input("""Quelle comparaison voulez-vous réaliser ? \n1 : Plusieurs grains différents mais avec les mêmes propriétés fractales\n2 : Un grain fractale et un grain sphérique\n3 : Plusieurs grain ayant des proprétés fractales différentes\n4 : Plusieurs grain de tailles différentes mais de même propriétés fractale \n"""))
if choice == "1":
    number_of_grain = int(input("Combien de grain voulez-vous comparer?\n"))
    sigma = float(input("Quel valeur voulez-vous donner à sigma (le paramètre de fractalité)?\n"))

    S = int(sigma)
    wait = str(sigma)
    wait = wait.split(".")
    p = wait[1]
    f.main_function(number_of_grain, 0, sigma, S, p)

    for i in range(number_of_grain):
        results = np.loadtxt("results_Grain_N100_S{}p{}_B3p0_{}.txt".format(S, p, i))
        plt.hist(results, bins = 30, range = (0,13), color = "{}".format(c.COLOR[i]), edgecolor = "black", alpha = 0.5)

    plt.show()


elif choice == "2":
    number_of_grain = 2



elif choice == "3":
    number_of_grain = int(input("Combien de grain voulez-vous comparer?\n"))
    for i in range(int(number_of_grain)):
        sigma = float(input("Quelle valeur de sigma voulez-vous donner pour le grain n°{}\n".format(i + 1)))
        prop.append(sigma)
    print(prop)



elif choice == "4":
    number_of_grain = int(input("Combien de grain voulez-vous comparer?\n"))
    sigma = float(input("Quel valeur voulez-vous donner à sigma (le paramètre de fractalité)?\n"))
    for i in range(int(number_of_grain)):
        GRAIN_SIZE = float(input("Quelle taille voulez-vous donner au rayon du grain n°{} : 50/75/100/125/175/200\n".format(i + 1)))
